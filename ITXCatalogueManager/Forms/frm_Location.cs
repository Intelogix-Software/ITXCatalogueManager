using CefSharp;
using CefSharp.WinForms;
using DevExpress.XtraEditors;
using ITXCatalogueManager.Classes;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Xunit;

namespace ITXCatalogueManager.Forms
{
    public partial class frm_Location : DevExpress.XtraEditors.XtraForm
    {
        public string lat;
        public string lon;
        public string urlb;

        public string data { get; set; }
        public string datac { get; set; }
        public string description { get; set;  }
        public frm_Location()
        {
            InitializeComponent();
            
            Cef.EnableHighDPISupport();

            //var exitCode = CefSharp.BrowserSubprocess.SelfHost.Main(args);

            //if (exitCode >= 0)
            //{
            //    return;
            //}

            var settings = new CefSettings()
            {
                //By default CefSharp will use an in-memory cache, you need to specify a Cache Folder to persist data
                CachePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "CefSharp\\Cache"),
                BrowserSubprocessPath = System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName
            };
            

            //Perform dependency check to make sure all relevant resources are in our output directory.
            Cef.Initialize(settings, performDependencyCheck: true, browserProcessHandler: null);

            //var browser = new BrowserForm();
            //Application.Run(browser);


            //chromiumWebBrowser1.InitializeLifetimeService();
            //lat = "+36.026453";
            //lon = "-102.08660";
            //urlb = "https://www.google.com/maps/@" + lat + "," + lon + ",17.75z";
            splashScreenManager2.ShowWaitForm();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            SDS_Entities.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            SDS_Cities.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            SDS_entitiesGrid.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            SDS_States.Fill();
            splashScreenManager2.CloseWaitForm();
            //toastNotificationsManager1.Notifications[0].Body = "A";
            ////toastNotificationsManager1.Notifications[0].Body2 = "B";
            //toastNotificationsManager1.Notifications[0].Header = "C";
            //toastNotificationsManager1.ShowNotification(toastNotificationsManager1.Notifications[0]);

        }
       

        public string dourl(string lat, string lon)
        {
            return "https://www.google.com/maps/@" + lat + "," + lon + ",17.75z/data=!3m1!1e3";
        }

        private void btn_Save_Click(object sender, EventArgs e)
        {
            if (dxValidationProvider1.Validate() ){
                NewEntity ne = new NewEntity();
                ne.Id_Location = Guid.Empty;
                ne.Id_EntityType = (Guid)lue_locationType.EditValue;
                ne.Id_City = (Guid)lue_City.EditValue;
                ne.Latitude = (float)Convert.ToDecimal(edt_Lat.Text.ToString().Trim());
                ne.Longitude = (float)Convert.ToDecimal(edt_Lon.Text.ToString().Trim());
                ne.description = edt_Description.Text;
                ne.coords = ne.Latitude.ToString("0.000000") + "°, " + ne.Longitude.ToString("0.000000") + "°";
                ne.URL = edt_URL.Text;
                ne.address = edt_address.Text;
                ne.ZIPcode = edt_zip.Text;
                ne.Status = true;
                SQLCon.SQLCon con = new SQLCon.SQLCon();
                toastNotificationsManager1.Notifications[0].Body=
                con.sendNewEntity(ne).Rows[0].ItemArray[1].ToString();
                toastNotificationsManager1.Notifications[0].Header = "";
                toastNotificationsManager1.ShowNotification(toastNotificationsManager1.Notifications[0]);
                lue_locationType.EditValue = null;
                lue_City.EditValue = null;
                lue_state.EditValue = null;
                edt_Description.EditValue = null;
                edt_zip.EditValue = null;
                edt_address.EditValue = null;
                edt_Lat.EditValue = edt_Lon.EditValue = null;
                edt_URL.EditValue = null;
            }

        }

        private void lue_state_EditValueChanged(object sender, EventArgs e)
        {
            SDS_Cities.ClearRows();
            DevExpress.DataAccess.Sql.QueryParameter qp = new DevExpress.DataAccess.Sql.QueryParameter();
            qp.Name = "@ID_State";
            qp.Type = typeof(Guid);
            qp.Value = lue_state.EditValue;
            SDS_Cities.Queries[0].Parameters.Clear();
            SDS_Cities.Queries[0].Parameters.Add(qp);
            splashScreenManager2.ShowWaitForm();
            SDS_Cities.Fill();
            splashScreenManager2.CloseWaitForm();
            lue_City.Text = null;
        }

        private void edt_Log_EditValueChanged(object sender, EventArgs e)
        {
            //edt_URL.Text = dourl(edt_Lat.Text,edt_Lon.Text);
        }
        
        private async void btn_preview_Click(object sender, EventArgs e)
        {
            string s2 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-title gm2-headline-5')[0].innerText;");
            EvaluateScript(s2,0,TimeSpan.FromSeconds(1),cwb1).GetAwaiter().GetResult();

            //edt_URL.Text = chromiumWebBrowser1.Address.ToString();

            //Coordendas 
            /////////////////////////////
            ///

            //string s2 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-title gm2-headline-5')[0].innerText;");
            //while (!cwb1.CanExecuteJavascriptInMainFrame)
            //{ }
            //chromiumWebBrowser1.ExecuteScriptAsync(s2);





            //Task<JavascriptResponse> res = await cwb1 .EvaluateScriptAsync(s2);




            try
            {
                //description
                string script = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-title gm2-headline-5')[0].innerText;");

                //var results =  cwb1.ExecuteScriptAsync(script).ContinueWith(t =>
                //  {
                //      var response = t.Result;
                //      if (response.Success && response.Result != null)
                //      {
                //          data= response.Result.ToString();
                //      }
                //  });
                
            }
            catch (Exception ee) { 
                Console.WriteLine(ee.Message); 
                Console.WriteLine(ee.StackTrace);   
                MessageBox.Show(ee.Message); }

            
            try
            {
                //Clickderecho coordenadas  DONE
                string script = string.Format("document.getElementsByClassName('nbpPqf-menu-x3Eknd-text')[0].innerText;");
                await cwb1.GetMainFrame().EvaluateScriptAsync(script).ContinueWith(x =>
                {
                    var response = x.Result;
                    if (response.Success && response.Result != null)
                    {
                        datac = response.Result.ToString();
                        //MessageBox.Show(data);
                        Console.WriteLine(1);


                    }
                });
            }
            catch (Exception ee) { MessageBox.Show(ee.Message); }
            ////////////////////////////////////////////////
            try
            {
                //coords on no location pin try0
                string script22 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-VdSJob')[0].innerText;");
                await cwb1.GetMainFrame().EvaluateScriptAsync(script22).ContinueWith(x =>
                {
                    var response = x.Result;

                    if (response.Success && response.Result != null)
                    {
                        if (datac == null || datac.ToString().Replace(" ", "") == "")
                        {
                            datac = response.Result.ToString();
                        }
                        //Console.WriteLine(response.Message);
                        ////MessageBox.Show(data);
                        //Console.WriteLine(datac);
                    }
                });
            
            }
            catch { }
            try
            {
                //coords on no location pin try1
                string script22 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-VdSJob')[1].innerText;");
                await cwb1.GetMainFrame().EvaluateScriptAsync(script22).ContinueWith(x =>
                {
                    var response = x.Result;

                    if (response.Success && response.Result != null)
                    {
                        if (datac == null || datac.ToString().Replace(" ", "") == "")
                        {
                            datac = response.Result.ToString();
                        }
                        //Console.WriteLine(response.Message);
                        ////MessageBox.Show(data);
                        //Console.WriteLine(datac);
                    }
                });

            }
            catch { }

            if (datac != null && datac.ToString().Replace(" ","")!="")
            {
                string[] a = datac.Split(',');
                edt_Lat.Text = a[0].ToString().Trim();
                edt_Lon.Text = a[1].ToString().Trim();
                edt_URL.Text = dourl(a[0].ToString().Trim(), a[1].ToString().Trim());
            }
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /////tittle/description
            ///
            string datatitle="";
            try
            {
                //description on pin 
                string script2 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-title gm2-headline-5')[0].innerText;");
                //".getAttribute('class');");
                await cwb1.GetMainFrame().EvaluateScriptAsync(script2).ContinueWith(x =>
                {
                    var response = x.Result;

                    if (response.Success && response.Result != null)
                    {
                        datatitle = response.Result.ToString();
                        //MessageBox.Show(data);
                        Console.WriteLine(datatitle);
                    }
                });
            }
            catch { }


            edt_Description.Text = datatitle.ToString();
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /////adresss and zipcode (need pin)
            ///
            string dataaddress="";
            try
            {
                //on know location
                string script2 = string.Format("document.getElementsByClassName('RcCsl dqIYcf-RWgCYc-text w4vB1d C9yzub-TSZdd-on-hover-YuD1xf AG25L')[0].innerText;");
                await cwb1.GetMainFrame().EvaluateScriptAsync(script2).ContinueWith(x =>
                {
                    var response = x.Result;

                    if (response.Success && response.Result != null)
                    {
                        dataaddress = response.Result.ToString();
                        //MessageBox.Show(data);
                        Console.WriteLine(dataaddress);
                    }
                });
            }
            catch {
                
            }
            if (dataaddress == "")
            {
                try
                {

                    string script2 = string.Format("document.getElementsByClassName('section-info gm2-body-2 section-info-hoverable')[0].innerText;");
                    await cwb1.GetMainFrame().EvaluateScriptAsync(script2).ContinueWith(x =>
                    {
                        var response = x.Result;

                        if (response.Success && response.Result != null)
                        {
                            dataaddress = response.Result.ToString();
                            //MessageBox.Show(data);
                            Console.WriteLine(dataaddress);
                        }
                    });
                }
                catch { }
            }
            string address="";
            if (dataaddress != "")
            {
                string[] aa = dataaddress.Split(',');
                int ii = 1;
                foreach (string i in aa)
                {
                    int sS= aa.Length;
                    if (sS != ii)
                    {
                        address += i+", ";
                    }
                    ii+=1;
                }
                if (address != "")
                {
                    edt_address.Text = address.Substring(0, address.Length - 2);
                }
                string strNum = new string(address.Where(c => char.IsDigit(c)).Reverse().Take(5).Reverse().ToArray());
                edt_zip.Text = strNum;
            }

            //catch { }
            //if (data != null)
            //{
            //    string[] a = data.Split(',');
            //    edt_Lat.Text = a[0].ToString().Trim();
            //    edt_Lon.Text = a[1].ToString().Trim();
            //    edt_URL.Text = dourl(a[0].ToString().Trim(), a[1].ToString().Trim());
            //}

            //webBrowser1.Navigate(edt_URL.Text);
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            SDS_entitiesGrid.Fill();
        }

        private void frm_Entity_FormClosing(object sender, FormClosingEventArgs e)
        {
            Cef.Shutdown();
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            cwb1.Refresh();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
        }

        private void frm_Location_Load(object sender, EventArgs e)
        {
            cwb1.Load("https://www.google.com.mx/maps");
        }

        private void cwb1_IsBrowserInitializedChanged(object sender, EventArgs e)
        {
            
            MessageBox.Show("Test: " + cwb1.IsBrowserInitialized);
        }

        private async void cwb1_FrameLoadStart(object sender, FrameLoadStartEventArgs e)
        {
            //string s2 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-title gm2-headline-5')[0].innerText;");
            //using (cwb1)
            //{
            //    Console.WriteLine(cwb1.CanExecuteJavascriptInMainFrame + "CAN");
            //    //await browser.LoadUrlAsync();
            //    await cwb1.GetMainFrame().EvaluateScriptAsync(s2).ContinueWith(s =>
            //    {
            //        var response = s.Result;
            //        if (response.Success && response.Result != null)
            //        {
            //            data = s.Result.ToString();
            //            MessageBox.Show(data);
            //        }
            //    });
            //}
        }

        private void cwb1_FrameLoadEnd(object sender, FrameLoadEndEventArgs e)
        {
            Console.WriteLine();
        }
        public async Task<object> EvaluateScript(string script, object defaultValue, TimeSpan timeout, ChromiumWebBrowser _browser)
        {
            object result = defaultValue;
            if (_browser.IsBrowserInitialized && !_browser.IsDisposed && !_browser.Disposing)
            {
                try
                {
                    var task = _browser.EvaluateScriptAsync(script, timeout);
                    await task.ContinueWith(res => {
                        if (!res.IsFaulted)
                        {
                            var response = res.Result;
                            result = response.Result;// ? (response.Result ?? "null") : response.Message;
                        }
                    }).ConfigureAwait(false); // <-- This makes the task to synchronize on a different context
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.InnerException.Message);
                }
            }
            return result;
        }
        private void cwb1_LoadingStateChanged(object sender, LoadingStateChangedEventArgs e)
        {
            //string s2 = string.Format("document.getElementsByClassName('x3AX1-LfntMc-header-title-title gm2-headline-5')[0].innerText;");

            //if (e.IsLoading == false)
            //{
            //    Task<CefSharp.JavascriptResponse> response = cwb1.EvaluateScriptAsync(s2);

            //    Func<Task<CefSharp.JavascriptResponse>> func = () =>
            //    {
            //        response.Wait();
            //        return response;
            //    };
            //    func.BeginInvoke((ar) =>
            //    {
            //        var result = func.EndInvoke(ar);
            //        if (result.Result.Result != null)
            //        {

            //            MessageBox.Show( result.Result.Result.ToString());
            //        }
            //    },
            //    null);
            //}
        }
    }
}